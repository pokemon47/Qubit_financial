name: Deploy to Droplet

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.DROPLET_SSH_KEY }}" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        ssh-keygen -y -f ~/.ssh/deploy_key > ~/.ssh/deploy_key.pub
        echo "github.com,140.82.121.3 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl" > ~/.ssh/known_hosts
        echo "${{ secrets.DROPLET_HOST }} ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl" >> ~/.ssh/known_hosts
        chmod 644 ~/.ssh/known_hosts
    
    - name: Setup SSH Config
      run: |
        cat > ~/.ssh/config << EOL
        Host github.com
            HostName github.com
            User git
            IdentityFile ~/.ssh/deploy_key
            StrictHostKeyChecking yes
        Host ${{ secrets.DROPLET_HOST }}
            HostName ${{ secrets.DROPLET_HOST }}
            User ${{ secrets.DROPLET_USERNAME }}
            IdentityFile ~/.ssh/deploy_key
            StrictHostKeyChecking yes
        EOL
        chmod 600 ~/.ssh/config
    
    - name: Debug SSH Setup
      run: |
        ls -la ~/.ssh
        cat ~/.ssh/config
        cat ~/.ssh/known_hosts
        ssh-keygen -l -f ~/.ssh/deploy_key
        ssh -v ${{ secrets.DROPLET_USERNAME }}@${{ secrets.DROPLET_HOST }} echo "SSH connection test"
    
    - name: Deploy to Droplet
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DROPLET_HOST }}
        username: ${{ secrets.DROPLET_USERNAME }}
        key: ${{ secrets.DROPLET_SSH_KEY }}
        script: |
          cd /home/deployer/financial_score
          git pull origin main
          source venv/bin/activate
          pip install -r requirements.txt
          pkill gunicorn
          gunicorn -c gunicorn_config.py app:app > gunicorn.log 2>&1 & 